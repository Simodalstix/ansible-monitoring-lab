# roles/grafana/tasks/main.yml
---
- name: Install required packages for Grafana (Ubuntu)
  ansible.builtin.apt:
    name:
      - apt-transport-https
      - software-properties-common
      - wget
      - curl
    state: present
    update_cache: true
  when: ansible_os_family == "Debian"

- name: Download Grafana GPG key (Ubuntu)
  ansible.builtin.get_url:
    url: https://apt.grafana.com/gpg.key
    dest: /tmp/grafana-gpg.key
    mode: '0644'
  when: ansible_os_family == "Debian"

- name: Add Grafana GPG key (Ubuntu)
  ansible.builtin.apt_key:
    file: /tmp/grafana-gpg.key
    state: present
  when: ansible_os_family == "Debian"

- name: Add Grafana APT repository (Ubuntu)
  ansible.builtin.apt_repository:
    repo: "deb https://apt.grafana.com stable main"
    state: present
  when: ansible_os_family == "Debian"

- name: Install Grafana (Ubuntu)
  ansible.builtin.apt:
    name: grafana
    state: present
    update_cache: true
  when: ansible_os_family == "Debian"
  notify: Restart grafana-server

- name: Install Grafana (RHEL - placeholder, adjust as needed for RHEL 8/9)
  ansible.builtin.dnf: # or dnf for newer RHEL
    name: grafana
    state: present
  when: ansible_os_family == "RedHat" # This will run on RHEL, but will need specific repo setup for Grafana on RHEL
  notify: Restart grafana-server

- name: Ensure Grafana service is enabled and running
  ansible.builtin.systemd:
    name: grafana-server
    state: started
    enabled: true

- name: Wait for Grafana to start
  ansible.builtin.wait_for:
    port: "{{ grafana_port }}"
    host: "{{ ansible_host }}" # Use ansible_host to check the correct IP
    delay: 5
    timeout: 60

- name: Add Prometheus as a data source to Grafana
  ansible.builtin.uri:
    url: "http://localhost:{{ grafana_port }}/api/datasources"
    user: "{{ grafana_admin_user }}"
    password: "{{ grafana_admin_password }}"
    method: POST
    body_format: json
    body: "{{ lookup('template', 'datasource.yml.j2') | from_yaml | to_json }}"
    status_code: [200]
    force_basic_auth: true
    headers:
      Content-Type: "application/json"
    validate_certs: false # Adjust for production
  when: grafana_prometheus_server_url is defined and grafana_prometheus_server_url != ""
