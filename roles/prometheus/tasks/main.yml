---
- name: Create prometheus user
  ansible.builtin.user:
    name: "{{ prometheus_user }}"
    shell: /sbin/nologin
    system: yes

- name: Download Prometheus tarball
  ansible.builtin.get_url:
    url: "https://github.com/prometheus/prometheus/releases/download/v{{ prometheus_version }}/prometheus-{{ prometheus_version }}.linux-amd64.tar.gz"
    dest: "/tmp/prometheus-{{ prometheus_version }}.linux-amd64.tar.gz"
    mode: "0644"
  register: prometheus_download

- name: Extract Prometheus
  ansible.builtin.unarchive:
    src: "/tmp/prometheus-{{ prometheus_version }}.linux-amd64.tar.gz"
    dest: "{{ prometheus_install_dir }}"
    remote_src: yes
    creates: "{{ prometheus_install_dir }}/prometheus-{{ prometheus_version }}.linux-amd64"

- name: Copy Prometheus binaries to /usr/local/bin
  ansible.builtin.copy:
    src: "{{ prometheus_install_dir }}/prometheus-{{ prometheus_version }}.linux-amd64/{{ item }}"
    dest: "/usr/local/bin/{{ item }}"
    owner: root
    group: root
    mode: "0755"
  loop:
    - prometheus
    - promtool

- name: Create Prometheus config directory
  ansible.builtin.file:
    path: /etc/prometheus
    state: directory
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_user }}"
    mode: "0755"

- name: Template prometheus.yml
  ansible.builtin.template:
    src: prometheus.yml.j2
    dest: /etc/prometheus/prometheus.yml
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_user }}"
    mode: "0644"
  notify: Restart prometheus

- name: Create systemd service for Prometheus
  ansible.builtin.copy:
    dest: /etc/systemd/system/prometheus.service
    content: |
      [Unit]
      Description=Prometheus Monitoring
      Wants=network-online.target
      After=network-online.target

      [Service]
      User={{ prometheus_user }}
      ExecStart=/usr/local/bin/prometheus \
        --config.file=/etc/prometheus/prometheus.yml \
        --storage.tsdb.path=/var/lib/prometheus

      [Install]
      WantedBy=multi-user.target
    owner: root
    group: root
    mode: "0644"
  notify: Reload systemd

- name: Download node_exporter tarball
  ansible.builtin.get_url:
    url: "https://github.com/prometheus/node_exporter/releases/download/v{{ node_exporter_version }}/node_exporter-{{ node_exporter_version }}.linux-amd64.tar.gz"
    dest: "/tmp/node_exporter-{{ node_exporter_version }}.linux-amd64.tar.gz"
    mode: "0644"

- name: Extract node_exporter
  ansible.builtin.unarchive:
    src: "/tmp/node_exporter-{{ node_exporter_version }}.linux-amd64.tar.gz"
    dest: "{{ node_exporter_install_dir }}"
    remote_src: yes
    creates: "{{ node_exporter_install_dir }}/node_exporter-{{ node_exporter_version }}.linux-amd64"

- name: Copy node_exporter binary
  ansible.builtin.copy:
    src: "{{ node_exporter_install_dir }}/node_exporter-{{ node_exporter_version }}.linux-amd64/node_exporter"
    dest: /usr/local/bin/node_exporter
    owner: root
    group: root
    mode: "0755"

- name: Create node_exporter systemd service
  ansible.builtin.copy:
    dest: /etc/systemd/system/node_exporter.service
    content: |
      [Unit]
      Description=Node Exporter
      After=network.target

      [Service]
      User=root
      ExecStart=/usr/local/bin/node_exporter

      [Install]
      WantedBy=default.target
    owner: root
    group: root
    mode: "0644"
  notify: Reload systemd

- name: Ensure Prometheus is enabled and started
  ansible.builtin.service:
    name: prometheus
    enabled: yes
    state: started

- name: Ensure node_exporter is enabled and started
  ansible.builtin.service:
    name: node_exporter
    enabled: yes
    state: started
